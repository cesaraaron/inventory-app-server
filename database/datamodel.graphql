type Client {
  id: ID! @id
  name: String!
  lastName: String
  email: String @unique
  phoneNumber: String! @unique
  users: [User!]!
  products: [Product!]!
  sales: [Sale!]!
  logs: [Log!]!
}

type User {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  name: String!
  lastName: String
  notifications: Notifications!
  phoneNumber: String! @unique
  password: String!
  permissions: [UserPermissions!]! @scalarList(strategy: RELATION)
  isAdmin: Boolean! @default(value: false)
  client: Client!
  sales: [Sale!]!
}

type Notifications {
  id: ID! @id
  fireWhen: Int! @default(value: 5)
  devices: [String!]! @scalarList(strategy: RELATION)
}

enum UserPermissions {
  CREATE_PRODUCTS
  UPDATE_PRODUCTS
  DELETE_PRODUCTS
  CREATE_SALES
  DELETE_SALES
}

type Product {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  name: String!
  price: Float!
  notifications: Boolean!
  quantity: Int!
  user: User! @relation(link: INLINE)
  barCodeData: String
  client: Client! @relation(link: INLINE)
}

type Service {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  name: String!
  price: Float!
  user: User! @relation(link: INLINE)
  client: Client! @relation(link: INLINE)
}

type Sale {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  products: [CartProduct!]!
  soldBy: User!
  client: Client!
}

type CartProduct {
  id: ID! @id
  productId: ID!
  name: String!
  price: Float!
  quantitySold: Int!
}

type Log {
  id: ID! @id
  message: String!
  type: LogType!
  createdAt: DateTime! @createdAt
  user: User! @relation(link: INLINE)
  client: Client! @relation(link: INLINE)
}

enum LogType {
  ERROR
}
